%Deterministic dependencies
agent-ont:RequestMessage(X) :- agent-ont:AgentStatusRequest(X)
xsd:string(Y) :- agent-ont:AgentType(X), agent-ont:description(X,Y)
agent-ont:Identity(Y) :- agent-ont:Agent(X), agent-ont:identity(X,Y)
Y1 == Y2 :- agent-ont:AgentStatusReply(X), agent-ont:agent(X,Y1), agent-ont:agent(X,Y2)
!Ex0 agent-ont:agent(X,Ex0),owl:Thing(Ex0) :- agent-ont:AgentStatusReply(X)
Y1 == Y2 :- agent-ont:Agent(X), agent-ont:type(X,Y1), agent-ont:type(X,Y2)
!Ex0 agent-ont:type(X,Ex0),owl:Thing(Ex0) :- agent-ont:Agent(X)
xsd:string(Y) :- agent-ont:AgentInitializationRequest(X), agent-ont:basePublicationDirectory(X,Y)
agent-ont:Agent(Y) :- agent-ont:AgentStatusReply(X), agent-ont:agent(X,Y)
rdfs:Resource(Y) :- agent-ont:User(X), agent-ont:id(X,Y)
xsd:uriReference(Y) :- agent-ont:AgentInitializationRequest(X), agent-ont:basePublicationURI(X,Y)
xsd:timeInstant(Y) :- agent-ont:AgentStatusReply(X), agent-ont:lastPublicationTime(X,Y)
xsd:long(Y) :- agent-ont:AgentStatusReply(X), agent-ont:messagesReceived(X,Y)
xsd:string(Y) :- agent-ont:AgentType(X), agent-ont:className(X,Y)
agent-ont:User(Y) :- agent-ont:Agency(X), agent-ont:user(X,Y)
agent-ont:GUI(Y) :- agent-ont:AgentType(X), agent-ont:setupGUI(X,Y)
xsd:string(Y) :- agent-ont:AgentType(X), agent-ont:classPath(X,Y)
Y1 == Y2 :- agent-ont:id(Y1,X), agent-ont:id(Y2,X)
agent-ont:AgentType(Y) :- agent-ont:AgentInitializationRequest(X), agent-ont:agentType(X,Y)
agent-ont:Plugin(X) :- agent-ont:DotNetPlugin(X)
xsd:string(Y) :- agent-ont:PKCS12Identity(X), agent-ont:password(X,Y)
xsd:string(Y) :- agent-ont:DotNetPlugin(X), agent-ont:dynamicLinkLibrary(X,Y)
agent-ont:Identity(X) :- agent-ont:PKCS12Identity(X)
agent-ont:Agent(Y) :- agent-ont:AgentInitializationRequest(X), agent-ont:agent(X,Y)
Y1 == Y2 :- agent-ont:AgentStatusReply(X), agent-ont:messagesReceived(X,Y1), agent-ont:messagesReceived(X,Y2)
agent-ont:Message(X) :- agent-ont:AgentAliveMessage(X)
Y1 == Y2 :- agent-ont:AgentStatusReply(X), agent-ont:lastPublicationTime(X,Y1), agent-ont:lastPublicationTime(X,Y2)
agent-ont:RequestMessage(X) :- agent-ont:AgentInitializationRequest(X)
agent-ont:Agent(Y) :- agent-ont:AgentAliveMessage(X), agent-ont:agent(X,Y)

xsd:string(Y) :- agent-ont:PKCS12Identity(X), agent-ont:pkcs12File(X,Y)
agent-ont:AgentType(Y) :- agent-ont:Agency(X), agent-ont:agentType(X,Y)
agent-ont:Message(X) :- agent-ont:RequestMessage(X)
agent-ont:ReplyMessage(X) :- agent-ont:ErrorMessage(X)
agent-ont:Parameters(Y) :- agent-ont:Agent(X), agent-ont:parameters(X,Y)
agent-ont:AgentType(Y) :- agent-ont:Agent(X), agent-ont:type(X,Y)
xsd:string(Y) :- agent-ont:Agency(X), agent-ont:basePublicationDirectory(X,Y)
Y1 == Y2 :- agent-ont:AgentType(X), agent-ont:classPath(X,Y1), agent-ont:classPath(X,Y2)
!Ex0 agent-ont:classPath(X,Ex0),rdfs:Literal(Ex0) :- agent-ont:AgentType(X)
xsd:timeInstant(Y) :- agent-ont:AgentStatusReply(X), agent-ont:startTime(X,Y)
Y1 == Y2 :- agent-ont:AgentType(X), agent-ont:className(X,Y1), agent-ont:className(X,Y2)
!Ex0 agent-ont:className(X,Ex0),rdfs:Literal(Ex0) :- agent-ont:AgentType(X)
agent-ont:AsynchronousMessage(X) :- agent-ont:RunImmediately(X)
agent-ont:Plugin(X) :- agent-ont:JavaPlugin(X)
Y1 == Y2 :- agent-ont:ReplyMessage(X), agent-ont:inReplyTo(X,Y1), agent-ont:inReplyTo(X,Y2)
agent-ont:Message(X) :- agent-ont:ReplyMessage(X)
agent-ont:Agent(Y) :- agent-ont:User(X), agent-ont:agent(X,Y)
xsd:string(Y) :- agent-ont:Agent(X), agent-ont:description(X,Y)
Y1 == Y2 :- agent-ont:Message(X), agent-ont:transactionID(X,Y1), agent-ont:transactionID(X,Y2)
agent-ont:Parameters(Y) :- agent-ont:AgentInitializationRequest(X), agent-ont:parameters(X,Y)
Y1 == Y2 :- agent-ont:AgentType(X), agent-ont:parametersClass(X,Y1), agent-ont:parametersClass(X,Y2)
xsd:uriReference(Y) :- agent-ont:Agency(X), agent-ont:basePublicationURI(X,Y)
xsd:timeInstant(Y) :- agent-ont:Agent(X), agent-ont:creationTime(X,Y)
xsd:string(Y) :- agent-ont:DotNetPlugin(X), agent-ont:className(X,Y)
Y1 == Y2 :- agent-ont:Agent(X), agent-ont:parameters(X,Y1), agent-ont:parameters(X,Y2)
agent-ont:Message(X) :- agent-ont:AsynchronousMessage(X)
Y1 == Y2 :- agent-ont:Agent(X), agent-ont:description(X,Y1), agent-ont:description(X,Y2)
xsd:string(Y) :- agent-ont:JavaPlugin(X), agent-ont:className(X,Y)
agent-ont:Plugin(X) :- agent-ont:GUI(X)
xsd:string(Y) :- agent-ont:ReplyMessage(X), agent-ont:inReplyTo(X,Y)
agent-ont:ReplyMessage(X) :- agent-ont:AgentStatusReply(X)
rdfs:Class(Y) :- agent-ont:AgentType(X), agent-ont:parametersClass(X,Y)
xsd:string(Y) :- agent-ont:Message(X), agent-ont:transactionID(X,Y)
Y1 == Y2 :- agent-ont:Agent(X), agent-ont:creationTime(X,Y1), agent-ont:creationTime(X,Y2)
!Ex0 agent-ont:creationTime(X,Ex0),owl:Thing(Ex0) :- agent-ont:Agent(X)
agent-ont:AsynchronousMessage(X) :- agent-ont:ShutdownMessage(X)
xsd:string(Y) :- agent-ont:ErrorMessage(X), agent-ont:error(X,Y)
agent-ont:GUI(Y) :- agent-ont:AgentType(X), agent-ont:statusGUI(X,Y)
Y1 == Y2 :- agent-ont:AgentInitializationRequest(X), agent-ont:description(X,Y1), agent-ont:description(X,Y2)
Y1 == Y2 :- agent-ont:AgentStatusReply(X), agent-ont:startTime(X,Y1), agent-ont:startTime(X,Y2)
agent-ont:ReplyMessage(X) :- agent-ont:Ack(X)
Y1 == Y2 :- agent-ont:AgentType(X), agent-ont:description(X,Y1), agent-ont:description(X,Y2)
xsd:string(Y) :- agent-ont:AgentInitializationRequest(X), agent-ont:description(X,Y)
%Disjunctive dependencies
