%Deterministic dependencies
generations:hasSibling(Y,X) :- generations:hasSibling(X,Y)
generations:hasChild(Y,X) :- generations:hasParent(X,Y)
generations:hasParent(Y,X) :- generations:hasChild(X,Y)
generations:Mother(X) :- generations:Person(X), generations:hasChild(X,Y), generations:Person(Y), generations:hasSex(X,Y1), nom:FemaleSex(Y1)
generations:hasSex(X,Z) :- generations:Mother(X), nom:FemaleSex(Z)
!Ex0 generations:hasChild(X,Ex0),generations:Person(Ex0) :- generations:Mother(X)
generations:Person(X) :- generations:Mother(X)
generations:Brother(X) :- generations:Person(X), generations:hasSex(X,Y), nom:MaleSex(Y), generations:hasSibling(X,Y1), generations:Person(Y1)
!Ex0 generations:hasSibling(X,Ex0),generations:Person(Ex0) :- generations:Brother(X)
generations:hasSex(X,Z) :- generations:Brother(X), nom:MaleSex(Z)
generations:Person(X) :- generations:Brother(X)
generations:Sibling(X) :- generations:Person(X), generations:hasSibling(X,Y), generations:Person(Y)
!Ex0 generations:hasSibling(X,Ex0),generations:Person(Ex0) :- generations:Sibling(X)
generations:Person(X) :- generations:Sibling(X)
generations:GrandFather(X) :- generations:Person(X), generations:hasChild(X,Y), def:0(Y), generations:hasSex(X,Y1), nom:MaleSex(Y1)
def:0(X) :- generations:Person(X), generations:hasChild(X,Y), generations:Person(Y)
generations:hasSex(X,Z) :- generations:GrandFather(X), nom:MaleSex(Z)
!Ex0 generations:hasChild(X,Ex0),def:1(Ex0) :- generations:GrandFather(X)
!Ex0 generations:hasChild(X,Ex0),generations:Person(Ex0) :- def:1(X)
generations:Person(X) :- def:1(X)
generations:Person(X) :- generations:GrandFather(X)
generations:Daughter(X) :- generations:Person(X), generations:hasParent(X,Y), generations:Person(Y), generations:hasSex(X,Y1), nom:FemaleSex(Y1)
generations:hasSex(X,Z) :- generations:Daughter(X), nom:FemaleSex(Z)
!Ex0 generations:hasParent(X,Ex0),generations:Person(Ex0) :- generations:Daughter(X)
generations:Person(X) :- generations:Daughter(X)
Y1 == Y2 :- generations:hasSex(X,Y1), generations:hasSex(X,Y2)
generations:Parent(X) :- generations:Person(X), generations:hasChild(X,Y), generations:Person(Y)
!Ex0 generations:hasChild(X,Ex0),generations:Person(Ex0) :- generations:Parent(X)
generations:Person(X) :- generations:Parent(X)
generations:GrandMother(X) :- generations:Person(X), generations:hasChild(X,Y), def:0(Y), generations:hasSex(X,Y1), nom:FemaleSex(Y1)
generations:hasSex(X,Z) :- generations:GrandMother(X), nom:FemaleSex(Z)
!Ex0 generations:hasChild(X,Ex0),def:1(Ex0) :- generations:GrandMother(X)
generations:Person(X) :- generations:GrandMother(X)
generations:OffSpring(X) :- generations:Person(X), generations:hasParent(X,Y), generations:Person(Y)
!Ex0 generations:hasParent(X,Ex0),generations:Person(Ex0) :- generations:OffSpring(X)
generations:Person(X) :- generations:OffSpring(X)
generations:Male(X) :- generations:hasSex(X,Y), nom:MaleSex(Y)
generations:hasSex(X,Z) :- generations:Male(X), nom:MaleSex(Z)
generations:GrandParent(X) :- generations:Person(X), generations:hasChild(X,Y), def:0(Y)
!Ex0 generations:hasChild(X,Ex0),def:1(Ex0) :- generations:GrandParent(X)
generations:Person(X) :- generations:GrandParent(X)
generations:Father(X) :- generations:Person(X), generations:hasChild(X,Y), generations:Person(Y), generations:hasSex(X,Y1), nom:MaleSex(Y1)
generations:hasSex(X,Z) :- generations:Father(X), nom:MaleSex(Z)
!Ex0 generations:hasChild(X,Ex0),generations:Person(Ex0) :- generations:Father(X)
generations:Person(X) :- generations:Father(X)
generations:Sex(Y) :- generations:hasSex(X,Y)
generations:Son(X) :- generations:Person(X), generations:hasParent(X,Y), generations:Person(Y), generations:hasSex(X,Y1), nom:MaleSex(Y1)
generations:hasSex(X,Z) :- generations:Son(X), nom:MaleSex(Z)
!Ex0 generations:hasParent(X,Ex0),generations:Person(Ex0) :- generations:Son(X)
generations:Person(X) :- generations:Son(X)
generations:Sister(X) :- generations:Person(X), generations:hasSex(X,Y), nom:FemaleSex(Y), generations:hasSibling(X,Y1), generations:Person(Y1)
!Ex0 generations:hasSibling(X,Ex0),generations:Person(Ex0) :- generations:Sister(X)
generations:hasSex(X,Z) :- generations:Sister(X), nom:FemaleSex(Z)
generations:Person(X) :- generations:Sister(X)
generations:Female(X) :- generations:hasSex(X,Y), nom:FemaleSex(Y)
generations:hasSex(X,Z) :- generations:Female(X), nom:FemaleSex(Z)
generations:Woman(X) :- generations:Person(X), generations:hasSex(X,Y), nom:FemaleSex(Y)
generations:hasSex(X,Z) :- generations:Woman(X), nom:FemaleSex(Z)
generations:Person(X) :- generations:Woman(X)
generations:Man(X) :- generations:Person(X), generations:hasSex(X,Y), nom:MaleSex(Y)
generations:hasSex(X,Z) :- generations:Man(X), nom:MaleSex(Z)
generations:Person(X) :- generations:Man(X)
%Disjunctive dependencies
X == Z :-  generations:Sex(X), nom:MaleSex(Z), nom:FemaleSex(Z1)
X == Z1  :-  generations:Sex(X), nom:MaleSex(Z), nom:FemaleSex(Z1)

