%Deterministic dependencies
ResourceModel:representation(Y,X) :- ResourceModel:represented_by(X,Y)
ResourceModel:represented_by(Y,X) :- ResourceModel:representation(X,Y)
ResourceModel:identify(Y,X) :- ResourceModel:identifier(X,Y)
ResourceModel:identifier(Y,X) :- ResourceModel:identify(X,Y)
:contained_by(Y,X) :- :contains_msg_body(X,Y)
:contains_msg_body(Y,X) :- :contained_by(X,Y)
:message_sender(Y,X) :- :originator_of(X,Y)
:originator_of(Y,X) :- :message_sender(X,Y)
:me_message_header(Y,X) :- :me_message_header_of(X,Y)
:me_message_header_of(Y,X) :- :me_message_header(X,Y)
:contained_in_msg_env(Y,X) :- :contains_address(X,Y)
:contains_address(Y,X) :- :contained_in_msg_env(X,Y)
:message_recipient(Y,X) :- :recipient(X,Y)
:recipient(Y,X) :- :message_recipient(X,Y)
ServiceModel:sd_service_semantics(Y,X) :- ServiceModel:sd_service_semantics_of(X,Y)
ServiceModel:sd_service_semantics_of(Y,X) :- ServiceModel:sd_service_semantics(X,Y)
ServiceModel:service_description(Y,X) :- ServiceModel:service_description_of(X,Y)
ServiceModel:service_description_of(Y,X) :- ServiceModel:service_description(X,Y)
PolicyModel:owner(Y,X) :- ServiceModel:has_owner(X,Y)
ServiceModel:has_owner(Y,X) :- PolicyModel:owner(X,Y)
ServiceModel:request_service(Y,X) :- ServiceModel:used_by(X,Y)
ServiceModel:used_by(Y,X) :- ServiceModel:request_service(X,Y)
ServiceModel:service_semantics(Y,X) :- ServiceModel:service_semantics_of(X,Y)
ServiceModel:service_semantics_of(Y,X) :- ServiceModel:service_semantics(X,Y)
ServiceModel:realize_service(Y,X) :- ServiceModel:realized_by(X,Y)
ServiceModel:realized_by(Y,X) :- ServiceModel:realize_service(X,Y)
PolicyModel:describedBy(Y,X) :- PolicyModel:describes(X,Y)
PolicyModel:describes(Y,X) :- PolicyModel:describedBy(X,Y)
xsd:uriReference(Y) :- ResourceModel:realized_by(X,Y)
PolicyModel:Policy(Y) :- ResourceModel:governed_by(X,Y)
ResourceModel:Discovery_Service(X) :- ResourceModel:search(X,Y)
ResourceModel:Resource(Y) :- ResourceModel:identify(X,Y)
ResourceModel:Resource(X) :- ResourceModel:resource_description(X,Y)
ResourceModel:Resource_Description(Y) :- ResourceModel:resource_description(X,Y)
ResourceModel:Discovery(X) :- ResourceModel:discovery_realized_by(X,Y)
ResourceModel:Discovery_Service(Y) :- ResourceModel:discovery_realized_by(X,Y)
PolicyModel:Person_or_Organization(Y) :- ResourceModel:owned_by(X,Y)
ResourceModel:Representation(X) :- ResourceModel:representation(X,Y)
ResourceModel:Discovery_Service(X) :- ResourceModel:publish(X,Y)
ResourceModel:Identifier(X) :- ResourceModel:realized_by(X,Y)
ResourceModel:Resource_Description(Y) :- ResourceModel:search(X,Y)
ResourceModel:Identifier(X) :- ResourceModel:identify(X,Y)
ServiceModel:Service(X) :- ResourceModel:Discovery_Service(X)
ResourceModel:Resource(X) :- ResourceModel:governed_by(X,Y)
ResourceModel:Resource(Y) :- ResourceModel:representation(X,Y)
ResourceModel:Discovery(X) :- ResourceModel:performed_by(X,Y)
ResourceModel:Resource_Description(Y) :- ResourceModel:publish(X,Y)
ServiceModel:Agent(Y) :- ResourceModel:performed_by(X,Y)
ResourceModel:Resource(X) :- ResourceModel:owned_by(X,Y)
ResourceModel:Discovery_Service(X) :- ResourceModel:used_by(X,Y)
ServiceModel:Agent(Y) :- ResourceModel:used_by(X,Y)
Extensions:Semantics(X) :- Extensions:Capability_Semantics(X)
Extensions:NetworkAddress(X) :- Extensions:constrainedBy(X,Y)
Extensions:Semantics(X) :- Extensions:Message_Semantics(X)
Extensions:Language(X) :- Extensions:ServiceSemanticsDescriptionLanguage(X)
Extensions:NetworkAddress(X) :- Extensions:URI(X)
Extensions:Language(X) :- Extensions:PolicyDescriptionLanguage(X)
:Message_Transport(Y) :- Extensions:constrainedBy(X,Y)
Extensions:Language(X) :- Extensions:ChoreographyDescriptionLanguage(X)
Extensions:Language(X) :- Extensions:ServiceDescriptionLanguage(X)
:Message_Sender(Y) :- :message_sender(X,Y)
:Message(X) :- :has_identifier(X,Y)
Y1 == Y2 :- wsa:Message(X), :message_transport(X,Y1), :message_transport(X,Y2)
!Ex0 :message_transport(X,Ex0),owl:Thing(Ex0) :- wsa:Message(X)
:Message_Body(X) :- :contained_by(X,Y)
:Message(X) :- :message_recipient(X,Y)
ServiceModel:Agent(X) :- :Message_Sender(X)
:Message_Transport(Y) :- :message_transport(X,Y)
:Message_Body(X) :- :content(X,Y)
!Ex0 :message_recipient(X,Ex0),owl:Thing(Ex0) :- wsa:Message(X)
:Message(X) :- :part_of_sequence(X,Y)
:Message_Receiver(Y) :- :message_recipient(X,Y)
:Message(X) :- :message_transport(X,Y)
Y1 == Y2 :- wsa:Message(X), :message_sender(X,Y1), :message_sender(X,Y2)
!Ex0 :message_sender(X,Ex0),owl:Thing(Ex0) :- wsa:Message(X)
:Message(X) :- :message_header(X,Y)
:Message_Correlation(Y) :- :realize_correlation(X,Y)
def:0(Y) :- :reliability_realized_by(X,Y)
:Message(X) :- :message_body(X,Y)
:Delivery_Policy(X) :- :expressedIn(X,Y)
Y1 == Y2 :- wsa:Message(X), :message_body(X,Y1), :message_body(X,Y2)
!Ex0 :message_body(X,Ex0),owl:Thing(Ex0) :- wsa:Message(X)
:Message(X) :- :describedUsing(X,Y)
ServiceModel:Service_Role(Y) :- :service_role(X,Y)
:Address(X) :- :contained_in_msg_env(X,Y)
:Delivery_Policy(Y) :- :constrained_by(X,Y)
ResourceModel:Identifier(Y) :- :correlation_id(X,Y)
ResourceModel:Identifier(Y) :- :mep_identifier(X,Y)
Extensions:Body_Content(Y) :- :content(X,Y)
:Address(X) :- :realizedBy(X,Y)
Y1 == Y2 :- wsa:Message(X), :message_envelope(X,Y1), :message_envelope(X,Y2)
!Ex0 :message_envelope(X,Ex0),owl:Thing(Ex0) :- wsa:Message(X)
ServiceModel:Agent(X) :- :Message_Receiver(X)
:Message(X) :- :associated_policy(X,Y)
:Message_Exchange_Pattern(Y) :- :realize_mep(X,Y)
:Message_Transport(Y) :- :constrains(X,Y)
:Message(X) :- :correlation_id(X,Y)
:Message_Sequence(Y) :- :part_of_sequence(X,Y)
:Message_Sequence(X) :- :realize_mep(X,Y)
:Message_Exchange_Pattern(X) :- :describe_service_invocation(X,Y)
:Message_Envelope(Y) :- :message_envelope(X,Y)
:Message_Envelope(Y) :- :contained_by(X,Y)
:Message_Transport(X) :- :constrained_by(X,Y)
PolicyModel:Policy(X) :- :Delivery_Policy(X)
Extensions:PolicyDescriptionLanguage(Y) :- :expressedIn(X,Y)
:Message_Header(Y) :- :message_header(X,Y)
:Delivery_Policy(Y) :- :associated_policy(X,Y)
:Message_Receiver(X) :- wsa:ServiceModel.owlService_Intermediary(X)
:Message_Header(X) :- :service_role(X,Y)
ResourceModel:Identifier(Y) :- :has_identifier(X,Y)
:Message_Body(Y) :- :message_body(X,Y)
Extensions:Service_Invocation(Y) :- :describe_service_invocation(X,Y)
:Message_Envelope(Y) :- :contained_in_msg_env(X,Y)
:Delivery_Policy(X) :- :constrains(X,Y)
:Message_Reliability(X) :- :reliability_realized_by(X,Y)
:Message_Transport(Y) :- :realized_by(X,Y)
:Message_Header(Y) :- :me_message_header(X,Y)
:Message_Reliability(X) :- :realized_by(X,Y)
:Message(X) :- :message_sender(X,Y)
:Message_Exchange_Pattern(X) :- :mep_identifier(X,Y)
:Message_Envelope(X) :- :me_message_header(X,Y)
Extensions:ServiceDescriptionLanguage(Y) :- :describedUsing(X,Y)
:Message_Exchange_Pattern(X) :- :realize_correlation(X,Y)
:Message(X) :- :message_envelope(X,Y)
Extensions:URI(Y) :- :realizedBy(X,Y)
:Message_Sender(X) :- wsa:ServiceModel.owlService_Intermediary(X)
ServiceModel:Service_Role(Y) :- ServiceModel:service_role(X,Y)
ServiceModel:Action(X) :- ServiceModel:SendingAction(X)
ServiceModel:Service_Interface(Y) :- ServiceModel:uses(X,Y)
ServiceModel:Service_Role(X) :- ServiceModel:associated_with(X,Y)
ServiceModel:Goal_State(X) :- ServiceModel:desired_goal_state(X,Y)
ResourceModel:Identifier(Y) :- ServiceModel:has_identifier(X,Y)
PolicyModel:Person_or_Organization(Y) :- ServiceModel:sr_defined_by(X,Y)
ServiceModel:Agent(X) :- ServiceModel:required_by(X,Y)
ServiceModel:Capability(Y) :- ServiceModel:required_by(X,Y)
ServiceModel:Service(Y) :- ServiceModel:request_service(X,Y)
Extensions:ServiceSemanticsDescriptionLanguage(Y) :- ServiceModel:ss_described_in(X,Y)
ServiceModel:Service_Intermediary(X) :- ServiceModel:has_role(X,Y)
PolicyModel:Person_or_Organization(X) :- ServiceModel:Requester_Entity(X)
ServiceModel:Service(X) :- ServiceModel:service_description(X,Y)
ServiceModel:Service(X) :- ServiceModel:service_identifier(X,Y)
Extensions:ServiceDescriptionLanguage(Y) :- ServiceModel:sd_expressed_in(X,Y)
ServiceModel:Provider_Agent(X) :- ServiceModel:pa_acts_on_behalf(X,Y)
ServiceModel:Service(Y) :- ServiceModel:offers(X,Y)
ServiceModel:Service_Interface(Y) :- ServiceModel:service_interface(X,Y)
Extensions:ChoreographyDescriptionLanguage(Y) :- ServiceModel:expressedIn(X,Y)
ServiceModel:Provider_Agent(Y) :- wsa:Provider_Entity(X), PolicyModel:owner(X,Y)
ServiceModel:Service_Interface(Y) :- ServiceModel:sd_service_interface(X,Y)
ServiceModel:Service_Role(X) :- ServiceModel:sr_defined_by(X,Y)
PolicyModel:Person_or_Organization(Y) :- ServiceModel:owned_by(X,Y)
ServiceModel:Service_Description(X) :- ServiceModel:sd_service_semantics(X,Y)
ServiceModel:Service(X) :- ServiceModel:service_interface(X,Y)
ServiceModel:Service(X) :- ServiceModel:service_semantics(X,Y)
ServiceModel:Service(X) :- ServiceModel:perform_task(X,Y)
ServiceModel:Agent(X) :- ServiceModel:Requester_Agent(X)
ServiceModel:Agent(X) :- ServiceModel:Provider_Agent(X)
PolicyModel:Person_or_Organization(Y) :- ServiceModel:desired_goal_state(X,Y)
Extensions:Message_Semantics(Y) :- ServiceModel:preserves(X,Y)
ServiceModel:Service_Description(X) :- ServiceModel:sd_service_interface(X,Y)
ServiceModel:Capability(X) :- ServiceModel:capability_semantics(X,Y)
ServiceModel:Service(X) :- ServiceModel:owned_by(X,Y)
ResourceModel:Resource(X) :- ServiceModel:Agent(X)
ServiceModel:Agent(X) :- ServiceModel:realize_service(X,Y)
ServiceModel:Service_Semantics(X) :- ServiceModel:ss_described_in(X,Y)
ServiceModel:Provider_Entity(X) :- ServiceModel:offers(X,Y)
ServiceModel:Service(X) :- ServiceModel:provided_by(X,Y)
ResourceModel:Identifier(Y) :- ServiceModel:service_identifier(X,Y)
ServiceModel:Capability(Y) :- ServiceModel:advertised_by(X,Y)
PolicyModel:Person_or_Organization(X) :- ServiceModel:Provider_Entity(X)
ServiceModel:Choreography(X) :- ServiceModel:uses(X,Y)
ServiceModel:Requester_Agent(Y) :- wsa:Requester_Entity(X), PolicyModel:owner(X,Y)
ServiceModel:Service(X) :- ServiceModel:service_role(X,Y)
ServiceModel:Service_Description(X) :- ServiceModel:has_capability(X,Y)
Y1 == Y2 :- wsa:Service(X), ServiceModel:service_description(X,Y1), ServiceModel:service_description(X,Y2)
!Ex0 ServiceModel:service_description(X,Ex0),owl:Thing(Ex0) :- wsa:Service(X)
ServiceModel:Service_Task(Y) :- ServiceModel:associated_with(X,Y)
ServiceModel:Service_Task(X) :- ServiceModel:st_service_interface(X,Y)
Extensions:State(X) :- wsa:Goal_State(X)
ServiceModel:Service_Semantics(Y) :- ServiceModel:sd_service_semantics(X,Y)
Extensions:Computational_Resource(X) :- ServiceModel:Agent(X)
ServiceModel:Goal_State(Y) :- ServiceModel:result(X,Y)
PolicyModel:Person_or_Organization(Y) :- ServiceModel:provided_by(X,Y)
ServiceModel:Service_Intermediary(X) :- ServiceModel:preserves(X,Y)
ServiceModel:Service_Task(X) :- ServiceModel:Service_Role(X)
ResourceModel:Resource(X) :- ServiceModel:Service(X)
ServiceModel:Service(Y) :- ServiceModel:realize_service(X,Y)
ServiceModel:Service_Description(Y) :- ServiceModel:service_description(X,Y)
ServiceModel:Requester_Agent(X) :- ServiceModel:ra_acts_on_behalf(X,Y)
ServiceModel:Provider_Entity(Y) :- ServiceModel:pa_acts_on_behalf(X,Y)
ServiceModel:Action(X) :- ServiceModel:ProcessingAction(X)
ServiceModel:Choreography(X) :- ServiceModel:expressedIn(X,Y)
ServiceModel:Service_Role(Y) :- ServiceModel:has_role(X,Y)
ServiceModel:Action(X) :- ServiceModel:result(X,Y)
ServiceModel:Action(X) :- ServiceModel:Service_Task(X)
ServiceModel:Capability(X) :- ServiceModel:has_identifier(X,Y)
ServiceModel:Agent(X) :- ServiceModel:advertised_by(X,Y)
Extensions:Capability_Semantics(Y) :- ServiceModel:capability_semantics(X,Y)
ServiceModel:Service_Interface(X) :- ServiceModel:define(X,Y)
ServiceModel:Agent(X) :- ServiceModel:request_service(X,Y)
!Ex0 ServiceModel:service_role(X,Ex0),owl:Thing(Ex0) :- wsa:Service(X)
ServiceModel:Service_Description(X) :- ServiceModel:sd_expressed_in(X,Y)
ServiceModel:Service_Task(Y) :- ServiceModel:perform_task(X,Y)
!Ex0 ServiceModel:perform_task(X,Ex0),owl:Thing(Ex0) :- wsa:Service(X)
PolicyModel:Policy(Y) :- ServiceModel:policy(X,Y)
ServiceModel:Service_Interface(Y) :- ServiceModel:st_service_interface(X,Y)
ServiceModel:Service(X) :- ServiceModel:policy(X,Y)
ServiceModel:Requester_Entity(Y) :- ServiceModel:ra_acts_on_behalf(X,Y)
ServiceModel:Service_Semantics(Y) :- ServiceModel:service_semantics(X,Y)
ServiceModel:Service(X) :- ServiceModel:Service_Intermediary(X)
ServiceModel:Capability(Y) :- ServiceModel:has_capability(X,Y)
:Message(Y) :- ServiceModel:define(X,Y)
!Ex0 ServiceModel:policy(X,Ex0),owl:Thing(Ex0) :- wsa:Service(X)
rdf:List(X) :- PolicyModel:Domain(X)
PolicyModel:Policy(X) :- PolicyModel:describedBy(X,Y)
Extensions:State(Y) :- PolicyModel:enable_state(X,Y)
ResourceModel:Resource(Y) :- PolicyModel:control(X,Y)
ServiceModel:Capability(Y) :- PolicyModel:capability(X,Y)
ServiceModel:Action(Y) :- PolicyModel:enable_action(X,Y)
PolicyModel:Person_or_Organization(Y) :- PolicyModel:has_a(X,Y)
PolicyModel:Policy(X) :- PolicyModel:constraints_action(X,Y)
PolicyModel:Permission_Guard(X) :- PolicyModel:control(X,Y)
PolicyModel:Permission(Y) :- PolicyModel:enforce(X,Y)
ServiceModel:Agent(Y) :- PolicyModel:owner(X,Y)
PolicyModel:Audit_Guard(X) :- PolicyModel:monitor(X,Y)
PolicyModel:Person_or_Organization(X) :- PolicyModel:owner(X,Y)
PolicyModel:Domain(Y) :- PolicyModel:member_of(X,Y)
PolicyModel:Permission_Guard(X) :- PolicyModel:enforce(X,Y)
PolicyModel:Policy(X) :- PolicyModel:capability(X,Y)
PolicyModel:Policy(X) :- PolicyModel:Permission(X)
PolicyModel:Policy(X) :- PolicyModel:Obligation(X)
PolicyModel:Policy(Y) :- PolicyModel:scopeOf(X,Y)
PolicyModel:Policy_Description(Y) :- PolicyModel:describedBy(X,Y)
ServiceModel:Action(Y) :- PolicyModel:constraints_action(X,Y)
PolicyModel:Domain(X) :- PolicyModel:scopeOf(X,Y)
ResourceModel:Resource(Y) :- PolicyModel:monitor(X,Y)
def:1(Y) :- PolicyModel:Domain(X), rdf:first(X,Y)
PolicyModel:Policy(X) :- PolicyModel:has_identifier(X,Y)
PolicyModel:Policy_Guard(X) :- PolicyModel:Permission_Guard(X)
PolicyModel:Policy_Guard(X) :- PolicyModel:has_a(X,Y)
ResourceModel:Identifier(Y) :- PolicyModel:has_identifier(X,Y)
PolicyModel:Person_or_Organization(X) :- PolicyModel:member_of(X,Y)
PolicyModel:Policy_Guard(X) :- PolicyModel:Audit_Guard(X)
PolicyModel:Permission(X) :- PolicyModel:enable_state(X,Y)
PolicyModel:Permission(X) :- PolicyModel:enable_action(X,Y)
%Disjunctive dependencies
Extensions:Message_Acknowledgement(X) :-  def:0(X)
:Message_Correlation(X)  :-  def:0(X)

ResourceModel:Resource(X) :-  def:1(X)
ServiceModel:Agent(X)  :-  def:1(X)

