%Deterministic dependencies
person:hasContact(X,Y) :- person:hasHomeContact(X,Y)
person:hasContact(X,Y) :- person:hasSchoolContact(X,Y)
person:hasContact(X,Y) :- person:hasWorkContact(X,Y)
person:providedBy(Y,X) :- person:hasRegisteredChatID(X,Y)
person:hasRegisteredChatID(Y,X) :- person:providedBy(X,Y)
person:givenName(X,Y) :- person:firstName(X,Y)
person:firstName(X,Y) :- person:givenName(X,Y)
person:lastName(X,Y) :- person:familyName(X,Y)
person:familyName(X,Y) :- person:lastName(X,Y)
person:Person(X) :- person:nickname(X,Y)
xsd:string(Y) :- person:fax(X,Y)
person:Person(X) :- person:middleName(X,Y)
Y1 == Y2 :- person:Person(X), person:gender(X,Y1), person:gender(X,Y2)
!Ex0 person:gender(X,Ex0),owl:Thing(Ex0) :- person:Person(X)
person:Person(X) :- person:lastName(X,Y)
Y1 == Y2 :- person:gender(X,Y1), person:gender(X,Y2)
person:ContactProfile(X) :- person:mobile(X,Y)
!Ex0 person:hasRegisteredChatID(X,Ex0),owl:Thing(Ex0) :- person:IMProvider(X)
person:ContactProfile(X) :- person:email(X,Y)
person:Person(X) :- person:birthDate(X,Y)
person:ChatID(Y) :- person:im(X,Y)
person:ContactProfile(Y) :- person:hasContact(X,Y)
person:ContactProfile(X) :- person:fax(X,Y)
person:ContactProfile(X) :- person:phone(X,Y)
xsd:dateTime(Y) :- person:birthDate(X,Y)
person:Homepage(Y) :- person:homepage(X,Y)
xsd:string(Y) :- person:sms(X,Y)
Y1 == Y2 :- person:hasContact(Y1,X), person:hasContact(Y2,X)
Y1 == Y2 :- person:Person(X), person:lastName(X,Y1), person:lastName(X,Y2)
!Ex0 person:lastName(X,Ex0),rdfs:Literal(Ex0) :- person:Person(X)
person:EmailAddress(Y) :- person:email(X,Y)
Y1 == Y2 :- person:Person(X), person:birthDate(X,Y1), person:birthDate(X,Y2)
!Ex0 person:birthDate(X,Ex0),rdfs:Literal(Ex0) :- person:Person(X)
Y1 == Y2 :- person:birthDate(X,Y1), person:birthDate(X,Y2)
person:ContactProfile(X) :- person:sms(X,Y)
xsd:string(Y) :- person:nickname(X,Y)
xsd:string(Y) :- person:middleName(X,Y)
person:ChatID(X) :- person:providedBy(X,Y)
person:Gender(Y) :- person:gender(X,Y)
xsd:string(Y) :- person:lastName(X,Y)
person:ContactProfile(X) :- person:myagent(X,Y)
xsd:string(Y) :- person:address(X,Y)
xsd:string(Y) :- person:mobile(X,Y)
person:Person(X) :- person:gender(X,Y)
person:Person(X) :- person:homepage(X,Y)
person:JADEAgentID(Y) :- person:myagent(X,Y)
person:Person(X) :- person:firstName(X,Y)
Y1 == Y2 :- person:lastName(X,Y1), person:lastName(X,Y2)
xsd:string(Y) :- person:phone(X,Y)
person:ContactProfile(X) :- person:address(X,Y)
person:ContactProfile(X) :- person:im(X,Y)
person:IMProvider(Y) :- person:providedBy(X,Y)
person:Person(X) :- person:hasContact(X,Y)
xsd:string(Y) :- person:firstName(X,Y)
%Disjunctive dependencies
X == Z :-  person:Gender(X), nom:Female(Z), nom:Male(Z1)
X == Z1  :-  person:Gender(X), nom:Female(Z), nom:Male(Z1)

